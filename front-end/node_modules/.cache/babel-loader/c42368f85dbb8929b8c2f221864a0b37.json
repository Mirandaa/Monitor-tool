{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js\",\n    _this = this;\n\nimport React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { getExampleData } from 'src/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Page = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var graph, option;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getExampleData();\n\n          case 2:\n            graph = _context.sent;\n            console.log(graph);\n            option = {\n              tooltip: {},\n              legend: [{\n                data: graph.categories.map(function (a) {\n                  return a.name;\n                })\n              }],\n              series: [{\n                name: 'Les Miserables',\n                type: 'graph',\n                layout: 'none',\n                data: graph.nodes,\n                links: graph.links,\n                categories: graph.categories,\n                roam: true,\n                label: {\n                  show: true,\n                  position: 'right',\n                  formatter: '{b}'\n                },\n                labelLayout: {\n                  hideOverlap: true\n                },\n                scaleLimit: {\n                  min: 0.4,\n                  max: 2\n                },\n                lineStyle: {\n                  color: 'source',\n                  curveness: 0.3\n                }\n              }]\n            };\n            return _context.abrupt(\"return\", /*#__PURE__*/_jsxDEV(ReactECharts, {\n              option: option,\n              style: {\n                height: '700px',\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 10\n            }, _this));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function Page() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js"],"names":["React","ReactECharts","getExampleData","Page","graph","console","log","option","tooltip","legend","data","categories","map","a","name","series","type","layout","nodes","links","roam","label","show","position","formatter","labelLayout","hideOverlap","scaleLimit","min","max","lineStyle","color","curveness","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAAQC,cAAR,QAA6B,SAA7B;;;AACA,IAAMC,IAAI;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSD,cAAc,EADvB;;AAAA;AACLE,YAAAA,KADK;AAEXC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACMG,YAAAA,MAHK,GAGI;AACbC,cAAAA,OAAO,EAAE,EADI;AAETC,cAAAA,MAAM,EAAE,CAAC;AACLC,gBAAAA,IAAI,EAAEN,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAqB,UAAUC,CAAV,EAAa;AACpC,yBAAOA,CAAC,CAACC,IAAT;AACH,iBAFK;AADD,eAAD,CAFC;AAOTC,cAAAA,MAAM,EAAE,CACJ;AACID,gBAAAA,IAAI,EAAE,gBADV;AAEIE,gBAAAA,IAAI,EAAE,OAFV;AAGIC,gBAAAA,MAAM,EAAE,MAHZ;AAIIP,gBAAAA,IAAI,EAAEN,KAAK,CAACc,KAJhB;AAKIC,gBAAAA,KAAK,EAAEf,KAAK,CAACe,KALjB;AAMIR,gBAAAA,UAAU,EAAEP,KAAK,CAACO,UANtB;AAOIS,gBAAAA,IAAI,EAAE,IAPV;AAQIC,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,IAAI,EAAE,IADH;AAEHC,kBAAAA,QAAQ,EAAE,OAFP;AAGHC,kBAAAA,SAAS,EAAE;AAHR,iBARX;AAaIC,gBAAAA,WAAW,EAAE;AACTC,kBAAAA,WAAW,EAAE;AADJ,iBAbjB;AAgBIC,gBAAAA,UAAU,EAAE;AACRC,kBAAAA,GAAG,EAAE,GADG;AAERC,kBAAAA,GAAG,EAAE;AAFG,iBAhBhB;AAoBIC,gBAAAA,SAAS,EAAE;AACPC,kBAAAA,KAAK,EAAE,QADA;AAEPC,kBAAAA,SAAS,EAAE;AAFJ;AApBf,eADI;AAPC,aAHJ;AAAA,0DAuCJ,QAAC,YAAD;AACL,cAAA,MAAM,EAAEzB,MADH;AAEL,cAAA,KAAK,EAAE;AAAE0B,gBAAAA,MAAM,EAAE,OAAV;AAAmBC,gBAAAA,KAAK,EAAE;AAA1B;AAFF;AAAA;AAAA;AAAA;AAAA,qBAvCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJ/B,IAAI;AAAA;AAAA;AAAA,GAAV;;KAAMA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport {getExampleData} from 'src/api';\nconst Page = async () => {\n  const graph = await getExampleData();\n  console.log(graph);\n  const option = {\n    tooltip: {},\n        legend: [{\n            data: graph.categories.map(function (a) {\n                return a.name;\n            })\n        }],\n        series: [\n            {\n                name: 'Les Miserables',\n                type: 'graph',\n                layout: 'none',\n                data: graph.nodes,\n                links: graph.links,\n                categories: graph.categories,\n                roam: true,\n                label: {\n                    show: true,\n                    position: 'right',\n                    formatter: '{b}'\n                },\n                labelLayout: {\n                    hideOverlap: true\n                },\n                scaleLimit: {\n                    min: 0.4,\n                    max: 2\n                },\n                lineStyle: {\n                    color: 'source',\n                    curveness: 0.3\n                }\n            }\n        ]\n  };\n\n  return <ReactECharts\n    option={option}\n    style={{ height: '700px', width: '100%' }}\n  />;\n};\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}