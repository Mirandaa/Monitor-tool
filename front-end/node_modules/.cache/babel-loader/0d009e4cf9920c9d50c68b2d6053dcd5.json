{"ast":null,"code":"var global = require('./_global'),\n    hide = require('./_hide'),\n    has = require('./_has'),\n    SRC = require('./_uid')('src'),\n    TO_STRING = 'toString',\n    $toString = Function[TO_STRING],\n    TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\n  if (O === global) {\n    O[key] = val;\n  } else {\n    if (!safe) {\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if (O[key]) O[key] = val;else hide(O, key, val);\n    }\n  } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","map":{"version":3,"sources":["/Users/mac/node_modules/core-js/modules/_redefine.js"],"names":["global","require","hide","has","SRC","TO_STRING","$toString","Function","TPL","split","inspectSource","it","call","module","exports","O","key","val","safe","isFunction","join","String","prototype","toString"],"mappings":"AAAA,IAAIA,MAAM,GAAMC,OAAO,CAAC,WAAD,CAAvB;AAAA,IACIC,IAAI,GAAQD,OAAO,CAAC,SAAD,CADvB;AAAA,IAEIE,GAAG,GAASF,OAAO,CAAC,QAAD,CAFvB;AAAA,IAGIG,GAAG,GAASH,OAAO,CAAC,QAAD,CAAP,CAAkB,KAAlB,CAHhB;AAAA,IAIII,SAAS,GAAG,UAJhB;AAAA,IAKIC,SAAS,GAAGC,QAAQ,CAACF,SAAD,CALxB;AAAA,IAMIG,GAAG,GAAS,CAAC,KAAKF,SAAN,EAAiBG,KAAjB,CAAuBJ,SAAvB,CANhB;;AAQAJ,OAAO,CAAC,SAAD,CAAP,CAAmBS,aAAnB,GAAmC,UAASC,EAAT,EAAY;AAC7C,SAAOL,SAAS,CAACM,IAAV,CAAeD,EAAf,CAAP;AACD,CAFD;;AAIA,CAACE,MAAM,CAACC,OAAP,GAAiB,UAASC,CAAT,EAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA2B;AAC3C,MAAIC,UAAU,GAAG,OAAOF,GAAP,IAAc,UAA/B;AACA,MAAGE,UAAH,EAAchB,GAAG,CAACc,GAAD,EAAM,MAAN,CAAH,IAAoBf,IAAI,CAACe,GAAD,EAAM,MAAN,EAAcD,GAAd,CAAxB;AACd,MAAGD,CAAC,CAACC,GAAD,CAAD,KAAWC,GAAd,EAAkB;AAClB,MAAGE,UAAH,EAAchB,GAAG,CAACc,GAAD,EAAMb,GAAN,CAAH,IAAiBF,IAAI,CAACe,GAAD,EAAMb,GAAN,EAAWW,CAAC,CAACC,GAAD,CAAD,GAAS,KAAKD,CAAC,CAACC,GAAD,CAAf,GAAuBR,GAAG,CAACY,IAAJ,CAASC,MAAM,CAACL,GAAD,CAAf,CAAlC,CAArB;;AACd,MAAGD,CAAC,KAAKf,MAAT,EAAgB;AACde,IAAAA,CAAC,CAACC,GAAD,CAAD,GAASC,GAAT;AACD,GAFD,MAEO;AACL,QAAG,CAACC,IAAJ,EAAS;AACP,aAAOH,CAAC,CAACC,GAAD,CAAR;AACAd,MAAAA,IAAI,CAACa,CAAD,EAAIC,GAAJ,EAASC,GAAT,CAAJ;AACD,KAHD,MAGO;AACL,UAAGF,CAAC,CAACC,GAAD,CAAJ,EAAUD,CAAC,CAACC,GAAD,CAAD,GAASC,GAAT,CAAV,KACKf,IAAI,CAACa,CAAD,EAAIC,GAAJ,EAASC,GAAT,CAAJ;AACN;AACF,GAf0C,CAgB7C;;AACC,CAjBD,EAiBGV,QAAQ,CAACe,SAjBZ,EAiBuBjB,SAjBvB,EAiBkC,SAASkB,QAAT,GAAmB;AACnD,SAAO,OAAO,IAAP,IAAe,UAAf,IAA6B,KAAKnB,GAAL,CAA7B,IAA0CE,SAAS,CAACM,IAAV,CAAe,IAAf,CAAjD;AACD,CAnBD","sourcesContent":["var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});"]},"metadata":{},"sourceType":"script"}