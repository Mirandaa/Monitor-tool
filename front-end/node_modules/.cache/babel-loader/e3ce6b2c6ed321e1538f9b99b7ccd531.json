{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { getExampleData } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Page = function Page() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      option = _useState2[0],\n      setOption = _useState2[1];\n\n  useEffect(function () {\n    getExampleData().then(function (graph) {\n      setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: [{\n          data: graph.categories.map(function (a) {\n            return a.name;\n          })\n        }],\n        series: [{\n          // name: 'Les Miserables',\n          type: 'graph',\n          layout: 'none',\n          data: graph.nodes,\n          links: graph.links,\n          categories: graph.categories,\n          roam: true,\n          label: {\n            show: true,\n            position: 'right',\n            formatter: '{b}'\n          },\n          labelLayout: {\n            hideOverlap: true\n          },\n          scaleLimit: {\n            min: 0.4,\n            max: 2\n          },\n          lineStyle: {\n            color: 'source',\n            curveness: 0.3\n          }\n        }]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      height: '700px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Page, \"JU5HNFNFTha49/pzHneT7OkeO8Q=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js"],"names":["React","useState","useEffect","ReactECharts","getExampleData","Page","option","setOption","then","graph","tooltip","trigger","legend","data","categories","map","a","name","series","type","layout","nodes","links","roam","label","show","position","formatter","labelLayout","hideOverlap","scaleLimit","min","max","lineStyle","color","curveness","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,cAAT,QAA+B,WAA/B;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACVK,MADU;AAAA,MACFC,SADE;;AAEjBL,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,cAAc,GAAGI,IAAjB,CAAsB,UAACC,KAAD,EAAW;AAC/BF,MAAAA,SAAS,CAAC;AACRG,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE;AADF,SADD;AAIRC,QAAAA,MAAM,EAAE,CAAC;AACPC,UAAAA,IAAI,EAAEJ,KAAK,CAACK,UAAN,CAAiBC,GAAjB,CAAqB,UAAUC,CAAV,EAAa;AACtC,mBAAOA,CAAC,CAACC,IAAT;AACD,WAFK;AADC,SAAD,CAJA;AASRC,QAAAA,MAAM,EAAE,CACN;AACE;AACAC,UAAAA,IAAI,EAAE,OAFR;AAGEC,UAAAA,MAAM,EAAE,MAHV;AAIEP,UAAAA,IAAI,EAAEJ,KAAK,CAACY,KAJd;AAKEC,UAAAA,KAAK,EAAEb,KAAK,CAACa,KALf;AAMER,UAAAA,UAAU,EAAEL,KAAK,CAACK,UANpB;AAOES,UAAAA,IAAI,EAAE,IAPR;AAQEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,IADD;AAELC,YAAAA,QAAQ,EAAE,OAFL;AAGLC,YAAAA,SAAS,EAAE;AAHN,WART;AAaEC,UAAAA,WAAW,EAAE;AACXC,YAAAA,WAAW,EAAE;AADF,WAbf;AAgBEC,UAAAA,UAAU,EAAE;AACVC,YAAAA,GAAG,EAAE,GADK;AAEVC,YAAAA,GAAG,EAAE;AAFK,WAhBd;AAoBEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE,QADE;AAETC,YAAAA,SAAS,EAAE;AAFF;AApBb,SADM;AATA,OAAD,CAAT;AAqCD,KAtCD;AAuCD,GAxCQ,EAwCN,EAxCM,CAAT;AA2CA,sBAAO,QAAC,YAAD;AACL,IAAA,MAAM,EAAE7B,MADH;AAEL,IAAA,KAAK,EAAE;AAAE8B,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B;AAFF;AAAA;AAAA;AAAA;AAAA,WAAP;AAID,CAjDD;;GAAMhC,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { getExampleData } from '../../api';\nconst Page = () => {\n  const [option, setOption] = useState({});\n  useEffect(() => {\n    getExampleData().then((graph) => {\n      setOption({\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: [{\n          data: graph.categories.map(function (a) {\n            return a.name;\n          })\n        }],\n        series: [\n          {\n            // name: 'Les Miserables',\n            type: 'graph',\n            layout: 'none',\n            data: graph.nodes,\n            links: graph.links,\n            categories: graph.categories,\n            roam: true,\n            label: {\n              show: true,\n              position: 'right',\n              formatter: '{b}'\n            },\n            labelLayout: {\n              hideOverlap: true\n            },\n            scaleLimit: {\n              min: 0.4,\n              max: 2\n            },\n            lineStyle: {\n              color: 'source',\n              curveness: 0.3\n            }\n          }\n        ]\n      })\n    })\n  }, []);\n\n\n  return <ReactECharts\n    option={option}\n    style={{ height: '700px', width: '100%' }}\n  />;\n};\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}