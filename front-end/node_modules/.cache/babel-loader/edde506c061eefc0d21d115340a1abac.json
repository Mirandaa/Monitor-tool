{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/front-end/src/views/visualize/modal/Modal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow, CCardFooter, CSwitch, CBadge, CInput, CListGroup, CListGroupItem } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { DocsLink } from 'src/reusable';\nimport './Modal.less';\nimport types from './chart-types';\nimport sources from './data-sources';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Modals = function Modals(props) {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      card = _useState2[0],\n      setCard = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      step = _useState4[0],\n      setStep = _useState4[1];\n\n  var handleClickCard = function handleClickCard(e, cardType) {\n    setCard(cardType);\n    setStep(2);\n  };\n\n  var handleClickClose = function handleClickClose() {\n    props.onClose();\n    setStep(1);\n  };\n\n  var goBackStepOne = function goBackStepOne() {\n    setStep(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CModal, {\n    show: props.show,\n    onClose: handleClickClose,\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n        children: step === 1 ? 'New Visualization' : \"\".concat(card.name, \" / Choose a source\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grid\",\n        style: {\n          display: step === 1 ? 'flex' : 'none'\n        },\n        children: types.map(function (type) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aggre-card aggre-card--isClickable\",\n              onClick: function onClick(e) {\n                return handleClickCard(e, type);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CIcon, {\n                  name: type.icon,\n                  size: '2xl'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 26\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"title\",\n                  children: type.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"detail\",\n                  children: type.des\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, _this)\n          }, type.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"source\",\n        style: {\n          display: step === 2 ? 'block' : 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"source-item\",\n          children: /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"primary\",\n            onClick: goBackStepOne,\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"source-item\",\n          children: /*#__PURE__*/_jsxDEV(CInput, {\n            id: \"searchSource\",\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"source-item list-group\",\n          children: sources.map(function (source) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-item\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"list-item-btn\",\n                children: source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, _this)\n            }, source.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Modals, \"FuPxR9L3DCr7cG06SR5MHUnxAlw=\");\n\n_c = Modals;\nexport default Modals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modals\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/front-end/src/views/visualize/modal/Modal.js"],"names":["React","useState","CButton","CCard","CCardBody","CCardHeader","CCol","CModal","CModalBody","CModalFooter","CModalHeader","CModalTitle","CRow","CCardFooter","CSwitch","CBadge","CInput","CListGroup","CListGroupItem","CIcon","DocsLink","types","sources","Modals","props","card","setCard","step","setStep","handleClickCard","e","cardType","handleClickClose","onClose","goBackStepOne","show","name","display","map","type","icon","des","key","source","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n  CCardFooter,\n  CSwitch,\n  CBadge,\n  CInput,\n  CListGroup,\n  CListGroupItem\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { DocsLink } from 'src/reusable'\nimport './Modal.less';\nimport types from './chart-types';\nimport sources from './data-sources'\n\nconst Modals = (props) => {\n  const [card, setCard] = useState(null);\n  const [step, setStep] = useState(1);\n\n  const handleClickCard = (e, cardType) => {\n    setCard(cardType);\n    setStep(2);\n  }\n\n  const handleClickClose = () => {\n    props.onClose();\n    setStep(1);\n  }\n  const goBackStepOne =() => {\n    setStep(1);\n  }\n\n  return (\n    <CModal\n      show={props.show}\n      onClose={handleClickClose}\n      size=\"lg\"\n    >\n      <CModalHeader closeButton>\n        <CModalTitle>{step === 1 ? 'New Visualization' : `${card.name} / Choose a source`}</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <div className=\"flex-grid\" style={{ display: step === 1 ? 'flex' : 'none' }}>\n          {\n            types.map((type) => {\n              return (\n                <div className=\"flex-item\" key={type.key}>\n                  <div className=\"aggre-card aggre-card--isClickable\" onClick={(e) => handleClickCard(e, type)}>\n                    <div><CIcon name={type.icon} size={'2xl'} /></div>\n                    <div className=\"content\">\n                      <p className=\"title\">{type.name}</p>\n                      <p className=\"detail\">{type.des}</p>\n                    </div>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n        <div className=\"source\" style={{ display: step === 2 ? 'block' : 'none' }}>\n          <div className=\"source-item\">\n            <CButton color=\"primary\" onClick={goBackStepOne}>Go Back</CButton>\n          </div>\n          <div className=\"source-item\">\n            <CInput id=\"searchSource\" placeholder=\"Search\" />\n          </div>\n          <ul className=\"source-item list-group\">\n            {\n              sources.map((source) => {\n                return (\n                  <li className=\"list-item\" key={source.id}>\n                    <button className=\"list-item-btn\">{source.name}</button>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </CModalBody>\n    </CModal>\n  )\n}\n\nexport default Modals\n"]},"metadata":{},"sourceType":"module"}