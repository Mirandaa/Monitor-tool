{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/visualize/Visualize.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CButton } from '@coreui/react';\nimport Modal from './modal/Modal';\nimport data from './visualize-list';\nimport { Model } from 'echarts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['title', 'type', 'app', 'server', {\n  key: 'action',\n  label: 'Action',\n  _style: {\n    width: '1%'\n  },\n  sorter: false,\n  filter: false\n}];\n\nvar Visualize = function Visualize() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: modalVisible,\n      onClose: setModalVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(CCol, {\n        xs: \"12\",\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(CCard, {\n          children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n            children: [\"Visualizations\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header-actions\",\n              children: /*#__PURE__*/_jsxDEV(CButton, {\n                block: true,\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setModalVisible(true);\n                },\n                children: \"Create Visualization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: data,\n              fields: fields,\n              itemsPerPage: 5,\n              pagination: true,\n              tableFilter: true,\n              columnFilter: true,\n              scopedSlots: {\n                'status': function status(item) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(CBadge, {\n                      color: getBadge(item.status),\n                      children: item.status\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, _this);\n                },\n                'action': function action(item, index) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"py-2\",\n                    children: /*#__PURE__*/_jsxDEV(CButton, {\n                      color: \"primary\",\n                      variant: \"outline\",\n                      shape: \"square\",\n                      size: \"sm\" // onClick={()=>{toggleDetails(index)}}\n                      ,\n                      children: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 25\n                  }, _this);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Visualize, \"eUChne/lYvkrgB29ku5PUEOQqyk=\");\n\n_c = Visualize;\nexport default Visualize;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualize\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/visualize/Visualize.js"],"names":["React","useState","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CButton","Modal","data","Model","getBadge","status","fields","key","label","_style","width","sorter","filter","Visualize","modalVisible","setModalVisible","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton\n} from '@coreui/react'\nimport Modal from './modal/Modal';\n\nimport data from './visualize-list'\nimport { Model } from 'echarts';\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = ['title', 'type', 'app', 'server', {\n  key: 'action',\n  label: 'Action',\n  _style: { width: '1%' },\n  sorter: false,\n  filter: false\n}]\n\nconst Visualize = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <>\n      <Modal show={modalVisible} onClose={setModalVisible}></Modal>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Visualizations\n              <div className=\"card-header-actions\">\n                <CButton block color=\"primary\" onClick={() => setModalVisible(true)}>Create Visualization</CButton>\n              </div>\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={data}\n                fields={fields}\n                itemsPerPage={5}\n                pagination\n                tableFilter\n                columnFilter\n                scopedSlots={{\n                  'status':\n                    (item) => (\n                      <td>\n                        <CBadge color={getBadge(item.status)}>\n                          {item.status}\n                        </CBadge>\n                      </td>\n                    ),\n                  'action':\n                    (item, index)=>{\n                      return (\n                        <td className=\"py-2\">\n                          <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                            // onClick={()=>{toggleDetails(index)}}\n                          >\n                            edit\n                          </CButton>\n                        </td>\n                        )\n                    }\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Visualize\n"]},"metadata":{},"sourceType":"module"}