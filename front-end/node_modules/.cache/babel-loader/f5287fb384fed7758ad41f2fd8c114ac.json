{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/createTrace/CreateTrace.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CForm, CFormGroup, CFormText, CTextarea, CInput, CInvalidFeedback, CInputCheckbox, CInputRadio, CLabel, CSelect, CSwitch } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CreateTrace = function CreateTrace() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      traceName = _useState2[0],\n      setTraceName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mainNodeId = _useState4[0],\n      setMainNodeId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fromNodeId = _useState6[0],\n      setFromNodeId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toNodeId = _useState8[0],\n      setToNodeId = _useState8[1];\n\n  var createTraceReq = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var forms, payload;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              forms = document.querySelectorAll('.needs-validation');\n              forms[0].classList.add('was-validated');\n              payload = {\n                traceName: traceName,\n                mainNodeId: mainNodeId,\n                fromNodeId: fromNodeId,\n                toNodeId: toNodeId\n              }; // call api /createTrace\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createTraceReq(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: \"Create a new trace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(CForm, {\n          noValidate: true,\n          onSubmit: function onSubmit(e) {\n            return createTraceReq(e);\n          },\n          className: \"form-horizontal needs-validation\",\n          children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"text-input\",\n                children: \"Trace Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: [/*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Enter trace name\",\n                required: true,\n                value: traceName,\n                onChange: function onChange(e) {\n                  return setTraceName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(CInvalidFeedback, {\n                children: \"Please input a valid name.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"email-input\",\n                children: \"Main Node ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: [/*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Enter main node ID\",\n                required: true,\n                value: mainNodeId,\n                onChange: function onChange(e) {\n                  return setMainNodeId(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(CInvalidFeedback, {\n                children: \"Please input a valid node ID.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"password-input\",\n                children: \"From Node ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: [/*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Enter the upstream node ID\",\n                required: true,\n                value: fromNodeId,\n                onChange: function onChange(e) {\n                  return setFromNodeId(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(CInvalidFeedback, {\n                children: \"Please input a valid node ID.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"password-input\",\n                children: \"To Node ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: [/*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Enter the downstream node ID\",\n                required: true,\n                value: toNodeId,\n                onChange: function onChange(e) {\n                  return setToNodeId(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, _this), /*#__PURE__*/_jsxDEV(CInvalidFeedback, {\n                children: \"Please input a valid node ID.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 25\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"c-datatable-filter\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mfs-auto\",\n              children: [/*#__PURE__*/_jsxDEV(CButton, {\n                type: \"submit\",\n                size: \"sm\",\n                color: \"success\",\n                className: \"mr-2\",\n                children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                  name: \"cil-scrubber\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 95\n                }, _this), \" Submit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n                type: \"reset\",\n                size: \"sm\",\n                color: \"danger\",\n                children: [/*#__PURE__*/_jsxDEV(CIcon, {\n                  name: \"cil-ban\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 76\n                }, _this), \" Reset\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(CreateTrace, \"yq3lYui5fXcZA/LdF0FqZrkin2g=\");\n\n_c = CreateTrace;\nexport default CreateTrace;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTrace\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/createTrace/CreateTrace.js"],"names":["React","useState","useEffect","CButton","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CForm","CFormGroup","CFormText","CTextarea","CInput","CInvalidFeedback","CInputCheckbox","CInputRadio","CLabel","CSelect","CSwitch","CIcon","CreateTrace","traceName","setTraceName","mainNodeId","setMainNodeId","fromNodeId","setFromNodeId","toNodeId","setToNodeId","createTraceReq","e","forms","document","querySelectorAll","classList","add","payload","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CFormText,\n    CTextarea,\n    CInput,\n    CInvalidFeedback,\n    CInputCheckbox,\n    CInputRadio,\n    CLabel,\n    CSelect,\n    CSwitch\n  } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst CreateTrace = () => {\n    const [traceName, setTraceName] = useState(\"\");\n    const [mainNodeId, setMainNodeId] = useState(\"\");\n    const [fromNodeId, setFromNodeId] = useState(\"\");\n    const [toNodeId, setToNodeId] = useState(\"\");\n\n    const createTraceReq = async (e) => {\n        let forms = document.querySelectorAll('.needs-validation')\n        forms[0].classList.add('was-validated')\n\n        const payload = {\n            traceName: traceName,\n            mainNodeId: mainNodeId,\n            fromNodeId: fromNodeId,\n            toNodeId: toNodeId\n        }\n        // call api /createTrace\n    };\n\n    return (\n        <>\n            <CCard>\n                <CCardHeader>\n                    Create a new trace\n                </CCardHeader>\n                <CCardBody>\n                    <CForm noValidate onSubmit={(e) => createTraceReq(e)} className=\"form-horizontal needs-validation\">\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"text-input\">Trace Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput\n                            type=\"input\"\n                            placeholder=\"Enter trace name\"\n                            required\n                            value={traceName}\n                            onChange={(e) => setTraceName(e.target.value)}\n                        />\n                        <CInvalidFeedback>Please input a valid name.</CInvalidFeedback>\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"email-input\">Main Node ID</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput\n                            type=\"input\"\n                            placeholder=\"Enter main node ID\"\n                            required\n                            value={mainNodeId}\n                            onChange={(e) => setMainNodeId(e.target.value)}\n                        />\n                        <CInvalidFeedback>Please input a valid node ID.</CInvalidFeedback>\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"password-input\">From Node ID</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput \n                            type=\"input\"\n                            placeholder=\"Enter the upstream node ID\"\n                            required\n                            value={fromNodeId}\n                            onChange={(e) => setFromNodeId(e.target.value)}\n                        />\n                        <CInvalidFeedback>Please input a valid node ID.</CInvalidFeedback>\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"password-input\">To Node ID</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput \n                            type=\"input\"\n                            placeholder=\"Enter the downstream node ID\"\n                            required\n                            value={toNodeId}\n                            onChange={(e) => setToNodeId(e.target.value)}\n                        />\n                        <CInvalidFeedback>Please input a valid node ID.</CInvalidFeedback>\n                        </CCol>\n                    </CFormGroup>\n                    <div className=\"c-datatable-filter\">\n                        <div className=\"mfs-auto\">\n                            <CButton type=\"submit\" size=\"sm\" color=\"success\" className=\"mr-2\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\n                        </div>\n                    </div>\n                    </CForm>\n                </CCardBody>\n            </CCard>\n        </>\n    )\n}\n\nexport default CreateTrace"]},"metadata":{},"sourceType":"module"}