{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/createNode/CreateNode.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CForm, CFormGroup, CFormText, CTextarea, CInput, CLabel, CModal, CModalHeader, CModalBody, CModalFooter, CModalTitle } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar CreateNode = function CreateNode() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      appName = _useState2[0],\n      setAppName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hostName = _useState4[0],\n      setHostName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      owner = _useState6[0],\n      setOwner = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      group = _useState8[0],\n      setGroup = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      groupMail = _useState10[0],\n      setGroupMail = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      desciption = _useState12[0],\n      setDesciption = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      warningModal = _useState14[0],\n      setWarningModal = _useState14[1];\n\n  var createNodeReq = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var payload, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = {\n                appName: appName,\n                hostName: hostName,\n                owner: owner,\n                group: group,\n                groupMail: groupMail,\n                desciption: desciption\n              };\n\n              for (key in payload) {\n                if (payload[key] === \"\") {\n                  setWarningModal(true); // return false;\n                }\n              } // return valid;\n\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createNodeReq(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n        children: \"Create a new node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(CForm, {\n          onSubmit: function onSubmit(e) {\n            return createNodeReq(e);\n          },\n          className: \"form-horizontal\",\n          children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"text-input\",\n                children: \"Application Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Enter name of your app\",\n                required: true,\n                value: appName,\n                onChange: function onChange(e) {\n                  return setAppName(e.target.value);\n                } // id=\"text-input\" name=\"text-input\"  \n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"email-input\",\n                children: \"Host Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Enter host name\",\n                required: true,\n                value: hostName,\n                onChange: function onChange(e) {\n                  return setHostName(e.target.value);\n                } // id=\"email-input\" name=\"email-input\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"password-input\",\n                children: \"App Owner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Owner of this app (eg. group leader)\",\n                required: true,\n                value: owner,\n                onChange: function onChange(e) {\n                  return setOwner(e.target.value);\n                } // id=\"password-input\" name=\"password-input\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"password-input\",\n                children: \"Group Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                type: \"input\",\n                placeholder: \"Team developed and operated this app\",\n                required: true,\n                value: group,\n                onChange: function onChange(e) {\n                  return setGroup(e.target.value);\n                } // id=\"password-input\" name=\"password-input\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"email-input\",\n                children: \"Group Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: /*#__PURE__*/_jsxDEV(CInput, {\n                type: \"email\",\n                placeholder: \"Contact email of the group. xxx@xx.com\",\n                required: true,\n                value: groupMail,\n                onChange: function onChange(e) {\n                  return setGroupMail(e.target.value);\n                } // id=\"email-input\" name=\"email-input\" autoComplete=\"email\"\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"textarea-input\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              md: \"9\",\n              children: /*#__PURE__*/_jsxDEV(CTextarea, {\n                type: \"input\",\n                placeholder: \"Briefly describe your app\",\n                required: true,\n                value: desciption,\n                onChange: function onChange(e) {\n                  return setDesciption(e.target.value);\n                } // name=\"textarea-input\" \n                // id=\"textarea-input\" \n                ,\n                rows: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n        className: \"c-datatable-filter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mfs-auto\",\n          children: [/*#__PURE__*/_jsxDEV(CButton, {\n            type: \"submit\",\n            size: \"sm\",\n            color: \"success\",\n            className: \"mr-2\",\n            children: [/*#__PURE__*/_jsxDEV(CIcon, {\n              name: \"cil-scrubber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 91\n            }, _this), \" Submit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(CButton, {\n            type: \"reset\",\n            size: \"sm\",\n            color: \"danger\",\n            children: [/*#__PURE__*/_jsxDEV(CIcon, {\n              name: \"cil-ban\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 72\n            }, _this), \" Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(CModal, {\n      show: warningModal,\n      onClose: function onClose() {\n        return setWarningModal(!warningModal);\n      },\n      color: \"warning\",\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n          children: \"Invalid input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: \"Please fill in all fields!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            return setWarningModal(!warningModal);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CreateNode, \"8pOjl7W2duJqhlTRpnp792MOMf4=\");\n\n_c = CreateNode;\nexport default CreateNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNode\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/createNode/CreateNode.js"],"names":["React","useState","useEffect","CButton","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CForm","CFormGroup","CFormText","CTextarea","CInput","CLabel","CModal","CModalHeader","CModalBody","CModalFooter","CModalTitle","CIcon","CreateNode","appName","setAppName","hostName","setHostName","owner","setOwner","group","setGroup","groupMail","setGroupMail","desciption","setDesciption","warningModal","setWarningModal","createNodeReq","e","payload","key","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CFormText,\n    CTextarea,\n    CInput,\n    CLabel,\n    CModal,\n    CModalHeader,\n    CModalBody,\n    CModalFooter,\n    CModalTitle\n  } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst CreateNode = () => {\n    const [appName, setAppName] = useState(\"\");\n    const [hostName, setHostName] = useState(\"\");\n    const [owner, setOwner] = useState(\"\");\n    const [group, setGroup] = useState(\"\");\n    const [groupMail, setGroupMail] = useState(\"\");\n    const [desciption, setDesciption] = useState(\"\");\n    const [warningModal, setWarningModal] = useState(false);\n\n    const createNodeReq = async (e) => {\n        const payload = {\n            appName: appName,\n            hostName: hostName,\n            owner: owner,\n            group: group,\n            groupMail: groupMail,\n            desciption: desciption\n        }\n\n        for(var key in payload){\n            if(payload[key] === \"\"){\n                setWarningModal(true);\n                // return false;\n            }\n        }\n        // return valid;\n    };\n\n    return (\n        <>\n            <CCard>\n                <CCardHeader>\n                    Create a new node\n                </CCardHeader>\n                <CCardBody>\n                    <CForm onSubmit={(e) => createNodeReq(e)} className=\"form-horizontal\">\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"text-input\">Application Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput\n                            type=\"input\"\n                            placeholder=\"Enter name of your app\"\n                            required\n                            value={appName}\n                            onChange={(e) => setAppName(e.target.value)}\n                            // id=\"text-input\" name=\"text-input\"  \n                        />\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"email-input\">Host Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput\n                            type=\"input\"\n                            placeholder=\"Enter host name\"\n                            required\n                            value={hostName}\n                            onChange={(e) => setHostName(e.target.value)}\n                            // id=\"email-input\" name=\"email-input\"\n                        />\n                        {/* <CFormText className=\"help-block\">Enter host/server name</CFormText> */}\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"password-input\">App Owner</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput \n                            type=\"input\"\n                            placeholder=\"Owner of this app (eg. group leader)\"\n                            required\n                            value={owner}\n                            onChange={(e) => setOwner(e.target.value)}\n                            // id=\"password-input\" name=\"password-input\"\n                        />\n                        {/* <CFormText className=\"help-block\">Owner of this app (eg. group leader)</CFormText> */}\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"password-input\">Group Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput \n                            type=\"input\"\n                            placeholder=\"Team developed and operated this app\"\n                            required\n                            value={group}\n                            onChange={(e) => setGroup(e.target.value)}\n                            // id=\"password-input\" name=\"password-input\"\n                        />\n                        {/* <CFormText className=\"help-block\">Team developed and operated this app</CFormText> */}\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"email-input\">Group Email</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CInput\n                            type=\"email\"\n                            placeholder=\"Contact email of the group. xxx@xx.com\"\n                            required\n                            value={groupMail}\n                            onChange={(e) => setGroupMail(e.target.value)}\n                            // id=\"email-input\" name=\"email-input\" autoComplete=\"email\"\n                        />\n                        {/* <CFormText className=\"help-block\">Contact email of the group</CFormText> */}\n                        </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                        <CCol md=\"3\">\n                        <CLabel htmlFor=\"textarea-input\">Description</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                        <CTextarea \n                            type=\"input\"\n                            placeholder=\"Briefly describe your app\"\n                            required\n                            value={desciption}\n                            onChange={(e) => setDesciption(e.target.value)}\n                            // name=\"textarea-input\" \n                            // id=\"textarea-input\" \n                            rows=\"3\"\n                        />\n                        </CCol>\n                    </CFormGroup>\n                    </CForm>\n                </CCardBody>\n                <CCardFooter className=\"c-datatable-filter\">\n                    <div className=\"mfs-auto\">\n                        <CButton type=\"submit\" size=\"sm\" color=\"success\" className=\"mr-2\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\n                        <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\n                    </div>\n                </CCardFooter>\n            </CCard>\n\n            <CModal \n              show={warningModal} \n              onClose={() => setWarningModal(!warningModal)}\n              color=\"warning\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Invalid input</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                Please fill in all fields!\n              </CModalBody>\n              <CModalFooter>\n                {/* <CButton color=\"warning\" onClick={() => setWarning(!warning)}>Do Something</CButton>{' '} */}\n                <CButton color=\"secondary\" onClick={() => setWarningModal(!warningModal)}>Close</CButton>\n              </CModalFooter>\n            </CModal>\n        </>\n    )\n}\n\nexport default CreateNode"]},"metadata":{},"sourceType":"module"}