{"ast":null,"code":"'use strict';\n\nvar $export = require('./_export'),\n    html = require('./_html'),\n    cof = require('./_cof'),\n    toIndex = require('./_to-index'),\n    toLength = require('./_to-length'),\n    arraySlice = [].slice; // fallback for not array-like ES3 strings and DOM objects\n\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  if (html) arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end) {\n    var len = toLength(this.length),\n        klass = cof(this);\n    end = end === undefined ? len : end;\n    if (klass == 'Array') return arraySlice.call(this, begin, end);\n    var start = toIndex(begin, len),\n        upTo = toIndex(end, len),\n        size = toLength(upTo - start),\n        cloned = Array(size),\n        i = 0;\n\n    for (; i < size; i++) {\n      cloned[i] = klass == 'String' ? this.charAt(start + i) : this[start + i];\n    }\n\n    return cloned;\n  }\n});","map":{"version":3,"sources":["/Users/mac/node_modules/core-js/modules/es6.array.slice.js"],"names":["$export","require","html","cof","toIndex","toLength","arraySlice","slice","P","F","call","begin","end","len","length","klass","undefined","start","upTo","size","cloned","Array","i","charAt"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAMC,OAAO,CAAC,WAAD,CAAxB;AAAA,IACIC,IAAI,GAASD,OAAO,CAAC,SAAD,CADxB;AAAA,IAEIE,GAAG,GAAUF,OAAO,CAAC,QAAD,CAFxB;AAAA,IAGIG,OAAO,GAAMH,OAAO,CAAC,aAAD,CAHxB;AAAA,IAIII,QAAQ,GAAKJ,OAAO,CAAC,cAAD,CAJxB;AAAA,IAKIK,UAAU,GAAG,GAAGC,KALpB,C,CAOA;;;AACAP,OAAO,CAACA,OAAO,CAACQ,CAAR,GAAYR,OAAO,CAACS,CAAR,GAAYR,OAAO,CAAC,UAAD,CAAP,CAAoB,YAAU;AAC5D,MAAGC,IAAH,EAAQI,UAAU,CAACI,IAAX,CAAgBR,IAAhB;AACT,CAF+B,CAAzB,EAEH,OAFG,EAEM;AACXK,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeI,KAAf,EAAsBC,GAAtB,EAA0B;AAC/B,QAAIC,GAAG,GAAKR,QAAQ,CAAC,KAAKS,MAAN,CAApB;AAAA,QACIC,KAAK,GAAGZ,GAAG,CAAC,IAAD,CADf;AAEAS,IAAAA,GAAG,GAAGA,GAAG,KAAKI,SAAR,GAAoBH,GAApB,GAA0BD,GAAhC;AACA,QAAGG,KAAK,IAAI,OAAZ,EAAoB,OAAOT,UAAU,CAACI,IAAX,CAAgB,IAAhB,EAAsBC,KAAtB,EAA6BC,GAA7B,CAAP;AACpB,QAAIK,KAAK,GAAIb,OAAO,CAACO,KAAD,EAAQE,GAAR,CAApB;AAAA,QACIK,IAAI,GAAKd,OAAO,CAACQ,GAAD,EAAMC,GAAN,CADpB;AAAA,QAEIM,IAAI,GAAKd,QAAQ,CAACa,IAAI,GAAGD,KAAR,CAFrB;AAAA,QAGIG,MAAM,GAAGC,KAAK,CAACF,IAAD,CAHlB;AAAA,QAIIG,CAAC,GAAQ,CAJb;;AAKA,WAAMA,CAAC,GAAGH,IAAV,EAAgBG,CAAC,EAAjB;AAAoBF,MAAAA,MAAM,CAACE,CAAD,CAAN,GAAYP,KAAK,IAAI,QAAT,GAC5B,KAAKQ,MAAL,CAAYN,KAAK,GAAGK,CAApB,CAD4B,GAE5B,KAAKL,KAAK,GAAGK,CAAb,CAFgB;AAApB;;AAGA,WAAOF,MAAP;AACD;AAfU,CAFN,CAAP","sourcesContent":["'use strict';\r\nvar $export    = require('./_export')\r\n  , html       = require('./_html')\r\n  , cof        = require('./_cof')\r\n  , toIndex    = require('./_to-index')\r\n  , toLength   = require('./_to-length')\r\n  , arraySlice = [].slice;\r\n\r\n// fallback for not array-like ES3 strings and DOM objects\r\n$export($export.P + $export.F * require('./_fails')(function(){\r\n  if(html)arraySlice.call(html);\r\n}), 'Array', {\r\n  slice: function slice(begin, end){\r\n    var len   = toLength(this.length)\r\n      , klass = cof(this);\r\n    end = end === undefined ? len : end;\r\n    if(klass == 'Array')return arraySlice.call(this, begin, end);\r\n    var start  = toIndex(begin, len)\r\n      , upTo   = toIndex(end, len)\r\n      , size   = toLength(upTo - start)\r\n      , cloned = Array(size)\r\n      , i      = 0;\r\n    for(; i < size; i++)cloned[i] = klass == 'String'\r\n      ? this.charAt(start + i)\r\n      : this[start + i];\r\n    return cloned;\r\n  }\r\n});"]},"metadata":{},"sourceType":"script"}