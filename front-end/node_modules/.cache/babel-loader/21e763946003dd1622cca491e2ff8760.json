{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { getExampleData } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Page = function Page() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      option = _useState2[0],\n      setOption = _useState2[1];\n\n  useEffect(function () {\n    getExampleData().then(function (graph) {\n      setOption({\n        tooltip: {},\n        legend: [{\n          data: graph.categories.map(function (a) {\n            return a.name;\n          })\n        }],\n        series: [{\n          name: 'Les Miserables',\n          type: 'graph',\n          layout: 'none',\n          data: graph.nodes,\n          links: graph.links,\n          categories: graph.categories,\n          roam: true,\n          label: {\n            show: true,\n            position: 'right',\n            formatter: '{b}'\n          },\n          labelLayout: {\n            hideOverlap: true\n          },\n          scaleLimit: {\n            min: 0.4,\n            max: 2\n          },\n          lineStyle: {\n            color: 'source',\n            curveness: 0.3\n          }\n        }]\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      height: '700px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Page, \"JU5HNFNFTha49/pzHneT7OkeO8Q=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js"],"names":["React","useState","useEffect","ReactECharts","getExampleData","Page","option","setOption","then","graph","tooltip","legend","data","categories","map","a","name","series","type","layout","nodes","links","roam","label","show","position","formatter","labelLayout","hideOverlap","scaleLimit","min","max","lineStyle","color","curveness","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACaJ,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACRK,MADQ;AAAA,MACAC,SADA;;AAEfL,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,cAAc,GAAGI,IAAjB,CAAsB,UAACC,KAAD,EAAW;AAC7BF,MAAAA,SAAS,CAAC;AACNG,QAAAA,OAAO,EAAE,EADH;AAEFC,QAAAA,MAAM,EAAE,CAAC;AACLC,UAAAA,IAAI,EAAEH,KAAK,CAACI,UAAN,CAAiBC,GAAjB,CAAqB,UAAUC,CAAV,EAAa;AACpC,mBAAOA,CAAC,CAACC,IAAT;AACH,WAFK;AADD,SAAD,CAFN;AAOFC,QAAAA,MAAM,EAAE,CACJ;AACID,UAAAA,IAAI,EAAE,gBADV;AAEIE,UAAAA,IAAI,EAAE,OAFV;AAGIC,UAAAA,MAAM,EAAE,MAHZ;AAIIP,UAAAA,IAAI,EAAEH,KAAK,CAACW,KAJhB;AAKIC,UAAAA,KAAK,EAAEZ,KAAK,CAACY,KALjB;AAMIR,UAAAA,UAAU,EAAEJ,KAAK,CAACI,UANtB;AAOIS,UAAAA,IAAI,EAAE,IAPV;AAQIC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAE,IADH;AAEHC,YAAAA,QAAQ,EAAE,OAFP;AAGHC,YAAAA,SAAS,EAAE;AAHR,WARX;AAaIC,UAAAA,WAAW,EAAE;AACTC,YAAAA,WAAW,EAAE;AADJ,WAbjB;AAgBIC,UAAAA,UAAU,EAAE;AACRC,YAAAA,GAAG,EAAE,GADG;AAERC,YAAAA,GAAG,EAAE;AAFG,WAhBhB;AAoBIC,UAAAA,SAAS,EAAE;AACPC,YAAAA,KAAK,EAAE,QADA;AAEPC,YAAAA,SAAS,EAAE;AAFJ;AApBf,SADI;AAPN,OAAD,CAAT;AAmCH,KApCD;AAqCH,GAtCQ,EAsCN,EAtCM,CAAT;AAyCF,sBAAO,QAAC,YAAD;AACL,IAAA,MAAM,EAAE5B,MADH;AAEL,IAAA,KAAK,EAAE;AAAE6B,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B;AAFF;AAAA;AAAA;AAAA;AAAA,WAAP;AAID,CA/CD;;GAAM/B,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport {getExampleData} from '../../api';\nconst Page = () => {\n    const [option, setOption] = useState({});\n    useEffect(() => {\n        getExampleData().then((graph) => {\n            setOption({\n                tooltip: {},\n                    legend: [{\n                        data: graph.categories.map(function (a) {\n                            return a.name;\n                        })\n                    }],\n                    series: [\n                        {\n                            name: 'Les Miserables',\n                            type: 'graph',\n                            layout: 'none',\n                            data: graph.nodes,\n                            links: graph.links,\n                            categories: graph.categories,\n                            roam: true,\n                            label: {\n                                show: true,\n                                position: 'right',\n                                formatter: '{b}'\n                            },\n                            labelLayout: {\n                                hideOverlap: true\n                            },\n                            scaleLimit: {\n                                min: 0.4,\n                                max: 2\n                            },\n                            lineStyle: {\n                                color: 'source',\n                                curveness: 0.3\n                            }\n                        }\n                    ]\n              })\n        })\n    }, []);\n\n\n  return <ReactECharts\n    option={option}\n    style={{ height: '700px', width: '100%' }}\n  />;\n};\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}