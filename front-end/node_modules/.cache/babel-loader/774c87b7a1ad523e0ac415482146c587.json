{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport { getExampleData } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Page = function Page() {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      option = _useState2[0],\n      setOption = _useState2[1];\n\n  useEffect(function () {\n    getExampleData.then(function (data) {\n      console.log(data);\n    });\n  }, []); //   const option = {\n  //     tooltip: {},\n  //         legend: [{\n  //             data: graph.categories.map(function (a) {\n  //                 return a.name;\n  //             })\n  //         }],\n  //         series: [\n  //             {\n  //                 name: 'Les Miserables',\n  //                 type: 'graph',\n  //                 layout: 'none',\n  //                 data: graph.nodes,\n  //                 links: graph.links,\n  //                 categories: graph.categories,\n  //                 roam: true,\n  //                 label: {\n  //                     show: true,\n  //                     position: 'right',\n  //                     formatter: '{b}'\n  //                 },\n  //                 labelLayout: {\n  //                     hideOverlap: true\n  //                 },\n  //                 scaleLimit: {\n  //                     min: 0.4,\n  //                     max: 2\n  //                 },\n  //                 lineStyle: {\n  //                     color: 'source',\n  //                     curveness: 0.3\n  //                 }\n  //             }\n  //         ]\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      height: '700px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Page, \"JU5HNFNFTha49/pzHneT7OkeO8Q=\");\n\n_c = Page;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/src/views/applications/Applications.js"],"names":["React","useState","useEffect","ReactECharts","getExampleData","Page","option","setOption","then","data","console","log","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAAQC,cAAR,QAA6B,WAA7B;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAAA,kBACaJ,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACRK,MADQ;AAAA,MACAC,SADA;;AAEfL,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,cAAc,CAACI,IAAf,CAAoB,UAACC,IAAD,EAAU;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT,CAFe,CAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBAAO,QAAC,YAAD;AACL,IAAA,MAAM,EAAEH,MADH;AAEL,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B;AAFF;AAAA;AAAA;AAAA;AAAA,WAAP;AAID,CA/CD;;GAAMR,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactECharts from 'echarts-for-react';\nimport {getExampleData} from '../../api';\nconst Page = () => {\n    const [option, setOption] = useState({});\n    useEffect(() => {\n        getExampleData.then((data) => {\n            console.log(data)\n        })\n    }, []);\n//   const option = {\n//     tooltip: {},\n//         legend: [{\n//             data: graph.categories.map(function (a) {\n//                 return a.name;\n//             })\n//         }],\n//         series: [\n//             {\n//                 name: 'Les Miserables',\n//                 type: 'graph',\n//                 layout: 'none',\n//                 data: graph.nodes,\n//                 links: graph.links,\n//                 categories: graph.categories,\n//                 roam: true,\n//                 label: {\n//                     show: true,\n//                     position: 'right',\n//                     formatter: '{b}'\n//                 },\n//                 labelLayout: {\n//                     hideOverlap: true\n//                 },\n//                 scaleLimit: {\n//                     min: 0.4,\n//                     max: 2\n//                 },\n//                 lineStyle: {\n//                     color: 'source',\n//                     curveness: 0.3\n//                 }\n//             }\n//         ]\n//   };\n\n  return <ReactECharts\n    option={option}\n    style={{ height: '700px', width: '100%' }}\n  />;\n};\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}