{"ast":null,"code":"'use strict';\n\nvar LIBRARY = require('./_library'),\n    $export = require('./_export'),\n    redefine = require('./_redefine'),\n    hide = require('./_hide'),\n    has = require('./_has'),\n    Iterators = require('./_iterators'),\n    $iterCreate = require('./_iter-create'),\n    setToStringTag = require('./_set-to-string-tag'),\n    getPrototypeOf = require('./_object-gpo'),\n    ITERATOR = require('./_wks')('iterator'),\n    BUGGY = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n,\n    FF_ITERATOR = '@@iterator',\n    KEYS = 'keys',\n    VALUES = 'values';\n\nvar returnThis = function returnThis() {\n  return this;\n};\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n\n  var TAG = NAME + ' Iterator',\n      DEF_VALUES = DEFAULT == VALUES,\n      VALUES_BUG = false,\n      proto = Base.prototype,\n      $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],\n      $default = $native || getMethod(DEFAULT),\n      $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,\n      $anyNative = NAME == 'Array' ? proto.entries || $native : $native,\n      methods,\n      key,\n      IteratorPrototype; // Fix native\n\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n\n    if (IteratorPrototype !== Object.prototype) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n\n    $default = function values() {\n      return $native.call(this);\n    };\n  } // Define iterator\n\n\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  } // Plug for library\n\n\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n\n  return methods;\n};","map":{"version":3,"sources":["/Users/mac/node_modules/core-js/modules/_iter-define.js"],"names":["LIBRARY","require","$export","redefine","hide","has","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","values","entries","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","methods","key","IteratorPrototype","call","Object","name","P","F"],"mappings":"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","sourcesContent":["'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};"]},"metadata":{},"sourceType":"script"}