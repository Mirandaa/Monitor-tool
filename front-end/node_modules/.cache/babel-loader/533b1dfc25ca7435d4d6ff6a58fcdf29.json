{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/citi/monitor-tool/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Desktop/citi/monitor-tool/front-end/src/views/applications/Applications.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactECharts from \"echarts-for-react\";\nimport { withRouter } from 'react-router-dom';\nimport { getExampleData } from \"../../api\";\nimport data from './example-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Page = function Page(props) {\n  _s();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      option = _useState2[0],\n      setOption = _useState2[1];\n\n  useEffect(function () {\n    getExampleData().then(function (graph) {\n      graph = data;\n      setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: function formatter(params) {\n            var res = \"\\n            <p style=\\\"font-weight: bold; line-height: 20px;\\\">\".concat(params.data.name, \"</p>\\n            <p style=\\\"height: 16px;\\\"><label style=\\\"width: 50px; text-overflow: ellipsis\\\">Server</label><span style=\\\"font-weight: bold;\\\">\").concat(params.data.server, \"</span></p>\\n            <p style=\\\"height: 16px;\\\"><label style=\\\"width: 50px; text-overflow: ellipsis\\\">Owner</label><span style=\\\"font-weight: bold;\\\">\").concat(params.data.owner, \"</span></p>\\n            \");\n            return res;\n          }\n        },\n        legend: [{\n          data: graph.categories.map(function (a) {\n            return a.name;\n          })\n        }],\n        series: [{\n          type: 'graph',\n          layout: 'force',\n          data: graph.nodes,\n          links: graph.links,\n          categories: graph.categories,\n          roam: true,\n          label: {\n            show: true,\n            position: \"right\",\n            formatter: \"{b}\"\n          },\n          labelLayout: {\n            hideOverlap: true\n          },\n          scaleLimit: {\n            min: 0.4,\n            max: 2\n          },\n          lineStyle: {\n            color: \"source\",\n            curveness: 0.3\n          },\n          force: {\n            repulsion: 300\n          }\n        }]\n      });\n    });\n  }, []);\n\n  var onClick = function onClick(e) {\n    props.history.push('/dashboard/123');\n  };\n\n  var onEvents = {\n    'click': onClick\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    style: {\n      height: \"700px\",\n      width: \"100%\"\n    },\n    onEvents: onEvents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Page, \"JU5HNFNFTha49/pzHneT7OkeO8Q=\");\n\n_c = Page;\nexport default _c2 = withRouter(Page);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/citi/monitor-tool/front-end/src/views/applications/Applications.js"],"names":["React","useState","useEffect","ReactECharts","withRouter","getExampleData","data","Page","props","option","setOption","then","graph","tooltip","trigger","formatter","params","res","name","server","owner","legend","categories","map","a","series","type","layout","nodes","links","roam","label","show","position","labelLayout","hideOverlap","scaleLimit","min","max","lineStyle","color","curveness","force","repulsion","onClick","e","history","push","onEvents","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACMP,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfQ,MADe;AAAA,MACPC,SADO;;AAEtBR,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,cAAc,GAAGM,IAAjB,CAAsB,UAACC,KAAD,EAAW;AAC/BA,MAAAA,KAAK,GAAGN,IAAR;AACAI,MAAAA,SAAS,CAAC;AACRG,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAE,MADF;AAEPC,UAAAA,SAAS,EAAE,mBAAUC,MAAV,EAAkB;AAC3B,gBAAIC,GAAG,8EAC4CD,MAAM,CAACV,IAAP,CAAYY,IADxD,iKAEuHF,MAAM,CAACV,IAAP,CAAYa,MAFnI,uKAGsHH,MAAM,CAACV,IAAP,CAAYc,KAHlI,8BAAP;AAKA,mBAAOH,GAAP;AACD;AATM,SADD;AAYRI,QAAAA,MAAM,EAAE,CAAC;AACPf,UAAAA,IAAI,EAAEM,KAAK,CAACU,UAAN,CAAiBC,GAAjB,CAAqB,UAAUC,CAAV,EAAa;AACtC,mBAAOA,CAAC,CAACN,IAAT;AACD,WAFK;AADC,SAAD,CAZA;AAiBRO,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,MAAM,EAAE,OAFV;AAGErB,UAAAA,IAAI,EAAEM,KAAK,CAACgB,KAHd;AAIEC,UAAAA,KAAK,EAAEjB,KAAK,CAACiB,KAJf;AAKEP,UAAAA,UAAU,EAAEV,KAAK,CAACU,UALpB;AAMEQ,UAAAA,IAAI,EAAE,IANR;AAOEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAE,IADD;AAELC,YAAAA,QAAQ,EAAE,OAFL;AAGLlB,YAAAA,SAAS,EAAE;AAHN,WAPT;AAYEmB,UAAAA,WAAW,EAAE;AACXC,YAAAA,WAAW,EAAE;AADF,WAZf;AAeEC,UAAAA,UAAU,EAAE;AACVC,YAAAA,GAAG,EAAE,GADK;AAEVC,YAAAA,GAAG,EAAE;AAFK,WAfd;AAmBEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE,QADE;AAETC,YAAAA,SAAS,EAAE;AAFF,WAnBb;AAuBEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE;AADN;AAvBT,SADM;AAjBA,OAAD,CAAT;AA+CD,KAjDD;AAkDD,GAnDQ,EAmDN,EAnDM,CAAT;;AAqDA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AACrBrC,IAAAA,KAAK,CAACsC,OAAN,CAAcC,IAAd,CAAmB,gBAAnB;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAG;AACf,aAASJ;AADM,GAAjB;AAIA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEnC,MADV;AAEE,IAAA,KAAK,EAAE;AAAEwC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAFT;AAGE,IAAA,QAAQ,EAAEF;AAHZ;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAtED;;GAAMzC,I;;KAAAA,I;AAwEN,qBAAeH,UAAU,CAACG,IAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactECharts from \"echarts-for-react\";\nimport { withRouter } from 'react-router-dom';\nimport { getExampleData } from \"../../api\";\nimport data from './example-data';\n\nconst Page = (props) => {\n  const [option, setOption] = useState({});\n  useEffect(() => {\n    getExampleData().then((graph) => {\n      graph = data;\n      setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            var res = `\n            <p style=\"font-weight: bold; line-height: 20px;\">${params.data.name}</p>\n            <p style=\"height: 16px;\"><label style=\"width: 50px; text-overflow: ellipsis\">Server</label><span style=\"font-weight: bold;\">${params.data.server}</span></p>\n            <p style=\"height: 16px;\"><label style=\"width: 50px; text-overflow: ellipsis\">Owner</label><span style=\"font-weight: bold;\">${params.data.owner}</span></p>\n            `;\n            return res;\n          }\n        },\n        legend: [{\n          data: graph.categories.map(function (a) {\n            return a.name;\n          })\n        }],\n        series: [\n          {\n            type: 'graph',\n            layout: 'force',\n            data: graph.nodes,\n            links: graph.links,\n            categories: graph.categories,\n            roam: true,\n            label: {\n              show: true,\n              position: \"right\",\n              formatter: \"{b}\",\n            },\n            labelLayout: {\n              hideOverlap: true,\n            },\n            scaleLimit: {\n              min: 0.4,\n              max: 2,\n            },\n            lineStyle: {\n              color: \"source\",\n              curveness: 0.3,\n            },\n            force: {\n              repulsion: 300\n            }\n          },\n        ]\n      });\n    });\n  }, []);\n\n  const onClick = (e) => {\n    props.history.push('/dashboard/123');\n  };\n\n  const onEvents = {\n    'click': onClick\n  };\n\n  return (\n    <ReactECharts\n      option={option}\n      style={{ height: \"700px\", width: \"100%\" }}\n      onEvents={onEvents}\n    />\n  );\n};\n\nexport default withRouter(Page);\n"]},"metadata":{},"sourceType":"module"}